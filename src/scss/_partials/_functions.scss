@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function str-list-replace($haystack, $needleList, $replacement) {
  $output: $haystack;
  @each $needle in $needleList {
    $output: str-replace($output, $needle, $replacement);
  }
  @return $output;
}

@function str-to-selector($string, $prefix:'.') {
  $dash-replaced: (' ', '/', '(', ')');
  @return $prefix + to-lower-case(
    str-replace(
      str-replace(
        str-replace(
          str-list-replace(
            $string, $dash-replaced, '-'
          ), '&', 'and'
        ), '.', ''
      ), ':', ''
    )
  );
}

@function role-in-careers($careers, $role) {
  $careerList: str-split($careers, '|');

  @if index($careerList, $role) {
    @return true;
  }

  @return false; // index($careerList, $role) > 0;
}

@function str-split($string, $separator) {
  // empty array/list
  $split-arr: ();
  // first index of separator in string
  $index : str-index($string, $separator);
  // loop through string
  @while $index != null {
    // get the substring from the first character to the separator
    $item: str-slice($string, 1, $index - 1);
    // push item to array
    $split-arr: append($split-arr, $item);
    // remove item and separator from string
    $string: str-slice($string, $index + 1);
    // find new index of separator
    $index : str-index($string, $separator);
  }
  // add the remaining string to list (the last item)
  $split-arr: append($split-arr, $string);

  @return $split-arr;
}

@function str-contains($list, $needle) {
  @return $list != '' and str-index($list, $needle) and 0 < str-index($list, $needle)
}
