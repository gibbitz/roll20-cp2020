$dataValues: map-get($data, 'data');
$roles: map-get($dataValues, 'roles');
$skills: map-get($dataValues, 'skills');
$compoundSkills: map-get($dataValues, 'compoundSkills');
$allSkills: join($skills, $compoundSkills);
$special-abilities: map-get($dataValues, 'specialAbilities');

.sheet-cp-2020 {
  $base: &;


  &__skill {
    font-size: 0.7em;

    &__wrapper {
      padding: 0 0.3em 0 0.8em;
    }

    label#{&}__name--view {
        color: white;
        cursor: pointer;
        display: block;
        font-size: 1.2em;
        letter-spacing: 1px;
        padding-left: 1em;
        position: relative;

        > input[type='checkbox'] {
          opacity: 0.01;
          position: absolute;

          &:checked + #{$base}__skill__name__carat {
            &::before {
              transform: rotate(135deg);
            }
          }
        }

        #{$base}__skill__name__carat {
          left: 0;
          position: absolute;
          top: 30%;
            &::before {
              content: '';
              display: block;
              height: 0.3em;
              width: 0.3em;
              border: 2px solid $dim-font-color;
              border-left: 0;
              border-bottom: 0;
              transform: rotate(45deg);
              transition: transform 0.5s ease-out;
            }
        }
    }

    &__description {
      box-sizing: border-box;
        display: block;
        font-size: 1.05em;
        letter-spacing: 1px;
        max-height: 0;
        overflow: hidden;
        padding-top: 0.5em;
        transition: max-height 0.5s ease-in-out;
    }

    [value='expanded'] ~ &__description {
      max-height: 500px;
    }

    @each $compoundSkill in $compoundSkills {
      @each $skill in map-get($compoundSkill, 'skillGroup') {
        $skillSelector: str-to-selector(#{$base}__skill-#{$skill});
        #{$skillSelector}__description,
        #{$skillSelector}__next-level {
          @extend %hide;
        }
        [value='#{$skill}'] ~ #{$skillSelector}__description{
          @extend %show-override;
        }
        @at-root [value='learn'] ~ #{$base}__inner-box {
          [value='#{$skill}'] ~ #{$skillSelector}__next-level {
            @extend %show-override;
          }
        }
      }
    }

    button#{$base}__skill__roll {
      @extend %d10-roll-button;
      bottom: 0.3em;
      position: relative;
    }

    &__stat-wrapper {
        align-items: center;
        cursor: pointer;
        display: flex;
        justify-content: space-around;
        padding: 0.3em !important;
        width: auto;

        > * {
          flex: 0 1 auto;
          margin: 0 .3em !important;
          white-space: nowrap;
        }

        #{$base}__stat-group {
          @extend %stat-group;
        }
    }
  }

  & &__skill {
    &__lvl--view {
      text-align: right;
      line-height: 1;
      padding: 0;
    }

    &--edit {
        max-width: 5em;
    }

    &__title-wrapper {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
    &-stat {
      color: $dim-font-color;
      font-size: 0.8em;
    }
  }

  &__skills {
    // GENERAL STYLING
    @extend %section-wrapper;

    #{$base}__learn-toggle {
      @extend %tab-group;
      font-size: 1em; // corrects wrong application order from SCSS compliation
      // TODO: fix issue where 0.9 is applied before 1.1em
      padding-top : 1em;
    }

    input[value='learn'] {
      & ~ #{$base}__learn-toggle {
        #{$base}__learn-tab {
          @extend %active-tab;
        }
      }
      & ~ #{$base}__inner-box {
        #{$base}__skill__stat-wrapper--view {
          @extend %hide;
        }
        #{$base}__skill__stat-wrapper {

          #{$base}__skill__chipped {
            @extend %show;
            opacity: 0.4;
            transition: opacity 0.4s ease-out;

            &:hover {
              opacity: 0.8;
              filter: sepia(100%) saturate(300%) brightness(250%) hue-rotate(57deg);
            }
          }

          #{$base}__stat-group__chipped-skill {
            @extend %hide;
          }

          input:checked + #{$base}__skill__chipped {
            opacity: 1;
          }

          #{$base}__skill__lvl--view {
            @extend %hide;
          }

          #{$base}__skill__roll {
            @extend %hide;
          }
        }
        select#{$base}__skill__name--edit {
          max-width: calc(100% - 4em);
          overflow: hidden;
          text-overflow: ellipsis;
          width: auto;
        }
        select + #{$base}__skill-name--view {
          @extend %hide;
        }
      }
    }
    input[value='use'] {
      & ~ #{$base}__learn-toggle{
        #{$base}__use-tab {
          @extend %active-tab;
        }
      }
      & ~ #{$base}__inner-box {
        .repcontrol {
          @extend %hide;
        }
        #{$base}__skill__stat-wrapper--edit {
          @extend %hide;
        }
        #{$base}__skill__stat-wrapper {
          #{$base}__skill--edit,
          #{$base}__stat-group#{$base}__skill--edit,
          #{$base}__skill__next-level {
            @extend %hide;
          }
        }

        select#{$base}__skill__name--edit,
        input#{$base}__skill__name--edit {
          pointer-events: none;
          @extend %hide;
        }

        #{$base}__pickup-skills {
          #{$base}__skill-learned {
            + #{$base}__skill {
              @extend %hide;
            }
          }
          @each $level in ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10') {
            [value='#{$level}'] + #{$base}__skill {
              @extend %show;
            }
          }
        }
      }
    }

    #{$base}__skill__chipped {
      @extend %hide;

      &::before {
        content: url($assets-icon-chipped);
        display: inline-block;
        height: 20px;
        cursor: pointer;
        width: 20px;
      }
    }

    [value='chipped'] + #{$base}__skill__chipped {
      @extend %show;
    }

    #{$base}__inner-box {
      padding-top: 1em;

      h5 {
        @extend %section-title;
        font-size: 0.9em;
        padding-top: 0.8em;
      }
    }

    #{$base}__skills__column {
      #{$base}__special-abilty,
      #{$base}__career-skills,
      #{$base}__pickup-skills {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;

         > * {
          flex: 1 1 40%;
          margin: 0.3em;
        }
      }
    }

    // BLOCK VISIBILITY
    @each $role in $roles {
      $role-selector: str-to-selector($role);
      [value='#{$role}'] {
        & ~ #{$base}__skills__column #{$base}__special-ability {
          #{$base}__skill {
            @extend %hide;
            @each $special-ability in $special-abilities {
              $ability-roles: map-get($special-ability, 'specialAbility');
              $ability-selector: str-to-selector(map-get($special-ability, 'skillName'), '#{$base}__skill-');
              @if str-index($ability-roles, $role) and 0 < str-index($ability-roles, $role) {
                &#{$ability-selector} {
                  @extend %show;
                }
              }
            }
          }
        }
        & ~ #{$base}__skills__column #{$base}__career-skills {
          #{$base}__skill {
            @extend %hide;
            @each $skill in $allSkills {
              $careers: '#{map-get($skill, 'career')}';
              $career-selector: str-to-selector(map-get($skill, 'skillName'), '#{$base}__skill-');
              @if str-contains($careers, $role) {
                &#{$career-selector} {
                  @extend %show;
                }
              }
            }
          }
        }
      }

      #{$base}__inner-box [value='#{$role}'] ~ #{$base}__skills__column #{$base}__pickup-skills {
        @each $skill in $skills {
          $careers: '#{map-get($skill, 'career')}';
          $career-selector: str-to-selector(map-get($skill, 'skillName'), '#{$base}__skill-');
          @if str-contains($careers, $role) {
            #{$career-selector} {
              @extend %hide-override;
            }
          }
        }
      }
    }

    input#{$base}__skill__name {
      & ~ #{$base}__skill__description {
        @extend %hide;
      }
    }
    @each $special-ability in $special-abilities {
      $ability: map-get($special-ability, 'skillName');
      $ability-selector: str-to-selector($ability, '#{$base}__skill-');
      input#{$base}__skill__name[value='#{$ability}'] {
        & ~ #{$ability-selector}__description {
          @extend %show;
        }
      }
    }

  }


}

